// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OwnershipTransferRequested extends ethereum.Event {
  get params(): OwnershipTransferRequested__Params {
    return new OwnershipTransferRequested__Params(this);
  }
}

export class OwnershipTransferRequested__Params {
  _event: OwnershipTransferRequested;

  constructor(event: OwnershipTransferRequested) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RequestFulfilled extends ethereum.Event {
  get params(): RequestFulfilled__Params {
    return new RequestFulfilled__Params(this);
  }
}

export class RequestFulfilled__Params {
  _event: RequestFulfilled;

  constructor(event: RequestFulfilled) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class RequestSent extends ethereum.Event {
  get params(): RequestSent__Params {
    return new RequestSent__Params(this);
  }
}

export class RequestSent__Params {
  _event: RequestSent;

  constructor(event: RequestSent) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class claimRequestMade extends ethereum.Event {
  get params(): claimRequestMade__Params {
    return new claimRequestMade__Params(this);
  }
}

export class claimRequestMade__Params {
  _event: claimRequestMade;

  constructor(event: claimRequestMade) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get requestId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class claimResponse extends ethereum.Event {
  get params(): claimResponse__Params {
    return new claimResponse__Params(this);
  }
}

export class claimResponse__Params {
  _event: claimResponse;

  constructor(event: claimResponse) {
    this._event = event;
  }

  get requestId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get response(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get err(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class employmentVCIssued extends ethereum.Event {
  get params(): employmentVCIssued__Params {
    return new employmentVCIssued__Params(this);
  }
}

export class employmentVCIssued__Params {
  _event: employmentVCIssued;

  constructor(event: employmentVCIssued) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class employmentVCVerified extends ethereum.Event {
  get params(): employmentVCVerified__Params {
    return new employmentVCVerified__Params(this);
  }
}

export class employmentVCVerified__Params {
  _event: employmentVCVerified;

  constructor(event: employmentVCVerified) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get reason(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class issuranceVCIssued extends ethereum.Event {
  get params(): issuranceVCIssued__Params {
    return new issuranceVCIssued__Params(this);
  }
}

export class issuranceVCIssued__Params {
  _event: issuranceVCIssued;

  constructor(event: issuranceVCIssued) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class issuranceVCVerified extends ethereum.Event {
  get params(): issuranceVCVerified__Params {
    return new issuranceVCVerified__Params(this);
  }
}

export class issuranceVCVerified__Params {
  _event: issuranceVCVerified;

  constructor(event: issuranceVCVerified) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get reason(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class labVCIssued extends ethereum.Event {
  get params(): labVCIssued__Params {
    return new labVCIssued__Params(this);
  }
}

export class labVCIssued__Params {
  _event: labVCIssued;

  constructor(event: labVCIssued) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class labVCVerified extends ethereum.Event {
  get params(): labVCVerified__Params {
    return new labVCVerified__Params(this);
  }
}

export class labVCVerified__Params {
  _event: labVCVerified;

  constructor(event: labVCVerified) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get reason(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class nationalVCIssued extends ethereum.Event {
  get params(): nationalVCIssued__Params {
    return new nationalVCIssued__Params(this);
  }
}

export class nationalVCIssued__Params {
  _event: nationalVCIssued;

  constructor(event: nationalVCIssued) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class nationalVCVerified extends ethereum.Event {
  get params(): nationalVCVerified__Params {
    return new nationalVCVerified__Params(this);
  }
}

export class nationalVCVerified__Params {
  _event: nationalVCVerified;

  constructor(event: nationalVCVerified) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get reason(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class CredentialEvents extends ethereum.SmartContract {
  static bind(address: Address): CredentialEvents {
    return new CredentialEvents("CredentialEvents", address);
  }

  claimToken(): Address {
    let result = super.call("claimToken", "claimToken():(address)", []);

    return result[0].toAddress();
  }

  try_claimToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("claimToken", "claimToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  requestIdToSender(param0: Bytes): Address {
    let result = super.call(
      "requestIdToSender",
      "requestIdToSender(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return result[0].toAddress();
  }

  try_requestIdToSender(param0: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "requestIdToSender",
      "requestIdToSender(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  sendRequest(
    source: string,
    encryptedSecretsUrls: Bytes,
    donHostedSecretsSlotID: i32,
    donHostedSecretsVersion: BigInt,
    args: Array<string>,
    bytesArgs: Array<Bytes>,
    subscriptionId: BigInt,
    gasLimit: BigInt,
    donID: Bytes
  ): Bytes {
    let result = super.call(
      "sendRequest",
      "sendRequest(string,bytes,uint8,uint64,string[],bytes[],uint64,uint32,bytes32):(bytes32)",
      [
        ethereum.Value.fromString(source),
        ethereum.Value.fromBytes(encryptedSecretsUrls),
        ethereum.Value.fromUnsignedBigInt(
          BigInt.fromI32(donHostedSecretsSlotID)
        ),
        ethereum.Value.fromUnsignedBigInt(donHostedSecretsVersion),
        ethereum.Value.fromStringArray(args),
        ethereum.Value.fromBytesArray(bytesArgs),
        ethereum.Value.fromUnsignedBigInt(subscriptionId),
        ethereum.Value.fromUnsignedBigInt(gasLimit),
        ethereum.Value.fromFixedBytes(donID)
      ]
    );

    return result[0].toBytes();
  }

  try_sendRequest(
    source: string,
    encryptedSecretsUrls: Bytes,
    donHostedSecretsSlotID: i32,
    donHostedSecretsVersion: BigInt,
    args: Array<string>,
    bytesArgs: Array<Bytes>,
    subscriptionId: BigInt,
    gasLimit: BigInt,
    donID: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "sendRequest",
      "sendRequest(string,bytes,uint8,uint64,string[],bytes[],uint64,uint32,bytes32):(bytes32)",
      [
        ethereum.Value.fromString(source),
        ethereum.Value.fromBytes(encryptedSecretsUrls),
        ethereum.Value.fromUnsignedBigInt(
          BigInt.fromI32(donHostedSecretsSlotID)
        ),
        ethereum.Value.fromUnsignedBigInt(donHostedSecretsVersion),
        ethereum.Value.fromStringArray(args),
        ethereum.Value.fromBytesArray(bytesArgs),
        ethereum.Value.fromUnsignedBigInt(subscriptionId),
        ethereum.Value.fromUnsignedBigInt(gasLimit),
        ethereum.Value.fromFixedBytes(donID)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  sendRequestCBOR(
    request: Bytes,
    subscriptionId: BigInt,
    gasLimit: BigInt,
    donID: Bytes
  ): Bytes {
    let result = super.call(
      "sendRequestCBOR",
      "sendRequestCBOR(bytes,uint64,uint32,bytes32):(bytes32)",
      [
        ethereum.Value.fromBytes(request),
        ethereum.Value.fromUnsignedBigInt(subscriptionId),
        ethereum.Value.fromUnsignedBigInt(gasLimit),
        ethereum.Value.fromFixedBytes(donID)
      ]
    );

    return result[0].toBytes();
  }

  try_sendRequestCBOR(
    request: Bytes,
    subscriptionId: BigInt,
    gasLimit: BigInt,
    donID: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "sendRequestCBOR",
      "sendRequestCBOR(bytes,uint64,uint32,bytes32):(bytes32)",
      [
        ethereum.Value.fromBytes(request),
        ethereum.Value.fromUnsignedBigInt(subscriptionId),
        ethereum.Value.fromUnsignedBigInt(gasLimit),
        ethereum.Value.fromFixedBytes(donID)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  whitelistedAddresses(param0: Address): boolean {
    let result = super.call(
      "whitelistedAddresses",
      "whitelistedAddresses(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_whitelistedAddresses(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "whitelistedAddresses",
      "whitelistedAddresses(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get router(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _claimToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall extends ethereum.Call {
  get inputs(): AcceptOwnershipCall__Inputs {
    return new AcceptOwnershipCall__Inputs(this);
  }

  get outputs(): AcceptOwnershipCall__Outputs {
    return new AcceptOwnershipCall__Outputs(this);
  }
}

export class AcceptOwnershipCall__Inputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall__Outputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class AddWhitelistedAddressCall extends ethereum.Call {
  get inputs(): AddWhitelistedAddressCall__Inputs {
    return new AddWhitelistedAddressCall__Inputs(this);
  }

  get outputs(): AddWhitelistedAddressCall__Outputs {
    return new AddWhitelistedAddressCall__Outputs(this);
  }
}

export class AddWhitelistedAddressCall__Inputs {
  _call: AddWhitelistedAddressCall;

  constructor(call: AddWhitelistedAddressCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddWhitelistedAddressCall__Outputs {
  _call: AddWhitelistedAddressCall;

  constructor(call: AddWhitelistedAddressCall) {
    this._call = call;
  }
}

export class EmpVCIssueCall extends ethereum.Call {
  get inputs(): EmpVCIssueCall__Inputs {
    return new EmpVCIssueCall__Inputs(this);
  }

  get outputs(): EmpVCIssueCall__Outputs {
    return new EmpVCIssueCall__Outputs(this);
  }
}

export class EmpVCIssueCall__Inputs {
  _call: EmpVCIssueCall;

  constructor(call: EmpVCIssueCall) {
    this._call = call;
  }
}

export class EmpVCIssueCall__Outputs {
  _call: EmpVCIssueCall;

  constructor(call: EmpVCIssueCall) {
    this._call = call;
  }
}

export class EmpVCVerifiedCall extends ethereum.Call {
  get inputs(): EmpVCVerifiedCall__Inputs {
    return new EmpVCVerifiedCall__Inputs(this);
  }

  get outputs(): EmpVCVerifiedCall__Outputs {
    return new EmpVCVerifiedCall__Outputs(this);
  }
}

export class EmpVCVerifiedCall__Inputs {
  _call: EmpVCVerifiedCall;

  constructor(call: EmpVCVerifiedCall) {
    this._call = call;
  }

  get message(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class EmpVCVerifiedCall__Outputs {
  _call: EmpVCVerifiedCall;

  constructor(call: EmpVCVerifiedCall) {
    this._call = call;
  }
}

export class HandleOracleFulfillmentCall extends ethereum.Call {
  get inputs(): HandleOracleFulfillmentCall__Inputs {
    return new HandleOracleFulfillmentCall__Inputs(this);
  }

  get outputs(): HandleOracleFulfillmentCall__Outputs {
    return new HandleOracleFulfillmentCall__Outputs(this);
  }
}

export class HandleOracleFulfillmentCall__Inputs {
  _call: HandleOracleFulfillmentCall;

  constructor(call: HandleOracleFulfillmentCall) {
    this._call = call;
  }

  get requestId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get response(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get err(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class HandleOracleFulfillmentCall__Outputs {
  _call: HandleOracleFulfillmentCall;

  constructor(call: HandleOracleFulfillmentCall) {
    this._call = call;
  }
}

export class InsuranceIssuedCall extends ethereum.Call {
  get inputs(): InsuranceIssuedCall__Inputs {
    return new InsuranceIssuedCall__Inputs(this);
  }

  get outputs(): InsuranceIssuedCall__Outputs {
    return new InsuranceIssuedCall__Outputs(this);
  }
}

export class InsuranceIssuedCall__Inputs {
  _call: InsuranceIssuedCall;

  constructor(call: InsuranceIssuedCall) {
    this._call = call;
  }
}

export class InsuranceIssuedCall__Outputs {
  _call: InsuranceIssuedCall;

  constructor(call: InsuranceIssuedCall) {
    this._call = call;
  }
}

export class InsuranceVCVerifiedCall extends ethereum.Call {
  get inputs(): InsuranceVCVerifiedCall__Inputs {
    return new InsuranceVCVerifiedCall__Inputs(this);
  }

  get outputs(): InsuranceVCVerifiedCall__Outputs {
    return new InsuranceVCVerifiedCall__Outputs(this);
  }
}

export class InsuranceVCVerifiedCall__Inputs {
  _call: InsuranceVCVerifiedCall;

  constructor(call: InsuranceVCVerifiedCall) {
    this._call = call;
  }

  get message(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class InsuranceVCVerifiedCall__Outputs {
  _call: InsuranceVCVerifiedCall;

  constructor(call: InsuranceVCVerifiedCall) {
    this._call = call;
  }
}

export class LabVCIssueCall extends ethereum.Call {
  get inputs(): LabVCIssueCall__Inputs {
    return new LabVCIssueCall__Inputs(this);
  }

  get outputs(): LabVCIssueCall__Outputs {
    return new LabVCIssueCall__Outputs(this);
  }
}

export class LabVCIssueCall__Inputs {
  _call: LabVCIssueCall;

  constructor(call: LabVCIssueCall) {
    this._call = call;
  }
}

export class LabVCIssueCall__Outputs {
  _call: LabVCIssueCall;

  constructor(call: LabVCIssueCall) {
    this._call = call;
  }
}

export class LaboratoryCVerifiedCall extends ethereum.Call {
  get inputs(): LaboratoryCVerifiedCall__Inputs {
    return new LaboratoryCVerifiedCall__Inputs(this);
  }

  get outputs(): LaboratoryCVerifiedCall__Outputs {
    return new LaboratoryCVerifiedCall__Outputs(this);
  }
}

export class LaboratoryCVerifiedCall__Inputs {
  _call: LaboratoryCVerifiedCall;

  constructor(call: LaboratoryCVerifiedCall) {
    this._call = call;
  }

  get message(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class LaboratoryCVerifiedCall__Outputs {
  _call: LaboratoryCVerifiedCall;

  constructor(call: LaboratoryCVerifiedCall) {
    this._call = call;
  }
}

export class NatVCVerifiedCall extends ethereum.Call {
  get inputs(): NatVCVerifiedCall__Inputs {
    return new NatVCVerifiedCall__Inputs(this);
  }

  get outputs(): NatVCVerifiedCall__Outputs {
    return new NatVCVerifiedCall__Outputs(this);
  }
}

export class NatVCVerifiedCall__Inputs {
  _call: NatVCVerifiedCall;

  constructor(call: NatVCVerifiedCall) {
    this._call = call;
  }

  get message(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class NatVCVerifiedCall__Outputs {
  _call: NatVCVerifiedCall;

  constructor(call: NatVCVerifiedCall) {
    this._call = call;
  }
}

export class NationalIdIssueCall extends ethereum.Call {
  get inputs(): NationalIdIssueCall__Inputs {
    return new NationalIdIssueCall__Inputs(this);
  }

  get outputs(): NationalIdIssueCall__Outputs {
    return new NationalIdIssueCall__Outputs(this);
  }
}

export class NationalIdIssueCall__Inputs {
  _call: NationalIdIssueCall;

  constructor(call: NationalIdIssueCall) {
    this._call = call;
  }
}

export class NationalIdIssueCall__Outputs {
  _call: NationalIdIssueCall;

  constructor(call: NationalIdIssueCall) {
    this._call = call;
  }
}

export class RemoveWhitelistedAddressCall extends ethereum.Call {
  get inputs(): RemoveWhitelistedAddressCall__Inputs {
    return new RemoveWhitelistedAddressCall__Inputs(this);
  }

  get outputs(): RemoveWhitelistedAddressCall__Outputs {
    return new RemoveWhitelistedAddressCall__Outputs(this);
  }
}

export class RemoveWhitelistedAddressCall__Inputs {
  _call: RemoveWhitelistedAddressCall;

  constructor(call: RemoveWhitelistedAddressCall) {
    this._call = call;
  }

  get _address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveWhitelistedAddressCall__Outputs {
  _call: RemoveWhitelistedAddressCall;

  constructor(call: RemoveWhitelistedAddressCall) {
    this._call = call;
  }
}

export class SendRequestCall extends ethereum.Call {
  get inputs(): SendRequestCall__Inputs {
    return new SendRequestCall__Inputs(this);
  }

  get outputs(): SendRequestCall__Outputs {
    return new SendRequestCall__Outputs(this);
  }
}

export class SendRequestCall__Inputs {
  _call: SendRequestCall;

  constructor(call: SendRequestCall) {
    this._call = call;
  }

  get source(): string {
    return this._call.inputValues[0].value.toString();
  }

  get encryptedSecretsUrls(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get donHostedSecretsSlotID(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get donHostedSecretsVersion(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get args(): Array<string> {
    return this._call.inputValues[4].value.toStringArray();
  }

  get bytesArgs(): Array<Bytes> {
    return this._call.inputValues[5].value.toBytesArray();
  }

  get subscriptionId(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get gasLimit(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get donID(): Bytes {
    return this._call.inputValues[8].value.toBytes();
  }
}

export class SendRequestCall__Outputs {
  _call: SendRequestCall;

  constructor(call: SendRequestCall) {
    this._call = call;
  }

  get requestId(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class SendRequestCBORCall extends ethereum.Call {
  get inputs(): SendRequestCBORCall__Inputs {
    return new SendRequestCBORCall__Inputs(this);
  }

  get outputs(): SendRequestCBORCall__Outputs {
    return new SendRequestCBORCall__Outputs(this);
  }
}

export class SendRequestCBORCall__Inputs {
  _call: SendRequestCBORCall;

  constructor(call: SendRequestCBORCall) {
    this._call = call;
  }

  get request(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get subscriptionId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get gasLimit(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get donID(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SendRequestCBORCall__Outputs {
  _call: SendRequestCBORCall;

  constructor(call: SendRequestCBORCall) {
    this._call = call;
  }

  get requestId(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
